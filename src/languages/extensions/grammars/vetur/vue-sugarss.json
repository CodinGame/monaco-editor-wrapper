{
  "patterns": [
    {
      "patterns": [
        {
          "include": "#comment-tag"
        }
      ],
      "begin": "/\\*",
      "name": "comment.block.sugarss",
      "end": "\\*/"
    },
    {
      "include": "#double-slash"
    },
    {
      "include": "#double-quoted"
    },
    {
      "include": "#single-quoted"
    },
    {
      "include": "#interpolation"
    },
    {
      "include": "#placeholder-selector"
    },
    {
      "include": "#variable"
    },
    {
      "include": "#variable-root-css"
    },
    {
      "include": "#numeric"
    },
    {
      "include": "#unit"
    },
    {
      "include": "#flag"
    },
    {
      "include": "#dotdotdot"
    },
    {
      "captures": {
        "0": {
          "name": "keyword.control.at-rule.css.sugarss"
        }
      },
      "begin": "@include",
      "name": "support.function.name.sugarss.library",
      "end": "(?=\\n|\\(|{)"
    },
    {
      "captures": {
        "0": {
          "name": "keyword.control.at-rule.css.sugarss"
        }
      },
      "patterns": [
        {
          "name": "entity.name.function",
          "match": "[\\w-]+"
        }
      ],
      "begin": "@mixin|@function",
      "name": "support.function.name.sugarss.no-completions",
      "end": "$\\n?|(?=\\(|{)"
    },
    {
      "name": "string.quoted.double.css.sugarss",
      "match": "(?<=@import)\\s[\\w/.*-]+"
    },
    {
      "begin": "@",
      "name": "keyword.control.at-rule.css.sugarss",
      "end": "$\\n?|\\s(?!(all|braille|embossed|handheld|print|projection|screen|speech|tty|tv|if|only|not)(\\s|,))"
    },
    {
      "patterns": [
        {
          "include": "#interpolation"
        },
        {
          "include": "#pseudo-class"
        }
      ],
      "begin": "#",
      "name": "entity.other.attribute-name.id.css.sugarss",
      "end": "$\\n?|(?=\\s|,|\\(|\\)|\\.|\\[|{|>)"
    },
    {
      "patterns": [
        {
          "include": "#interpolation"
        },
        {
          "include": "#pseudo-class"
        }
      ],
      "begin": "\\.|(?<=&)(-|_)",
      "name": "entity.other.attribute-name.class.css.sugarss",
      "end": "$\\n?|(?=\\s|,|\\(|\\)|\\[|{|>)"
    },
    {
      "patterns": [
        {
          "include": "#double-quoted"
        },
        {
          "include": "#single-quoted"
        },
        {
          "name": "keyword.other.regex.sugarss",
          "match": "\\^|\\$|\\*|~"
        }
      ],
      "begin": "\\[",
      "name": "entity.other.attribute-selector.sugarss",
      "end": "\\]"
    },
    {
      "name": "entity.other.attribute-name.pseudo-class.css.sugarss",
      "match": "(?<=\\]|\\)|not\\(|\\*|>|>\\s):[a-z:-]+|(::|:-)[a-z:-]+"
    },
    {
      "patterns": [
        {
          "include": "#double-slash"
        },
        {
          "include": "#double-quoted"
        },
        {
          "include": "#single-quoted"
        },
        {
          "include": "#interpolation"
        },
        {
          "include": "#variable"
        },
        {
          "include": "#rgb-value"
        },
        {
          "include": "#numeric"
        },
        {
          "include": "#unit"
        },
        {
          "include": "#flag"
        },
        {
          "include": "#function"
        },
        {
          "include": "#function-content"
        },
        {
          "include": "#function-content-var"
        },
        {
          "include": "#operator"
        },
        {
          "include": "#parent-selector"
        },
        {
          "include": "#property-value"
        }
      ],
      "begin": ":",
      "name": "meta.property-list.css.sugarss",
      "end": "$\\n?|(?=\\s\\(|and\\(|{|}|\\),)"
    },
    {
      "include": "#rgb-value"
    },
    {
      "include": "#function"
    },
    {
      "include": "#function-content"
    },
    {
      "patterns": [
        {
          "include": "#interpolation"
        },
        {
          "include": "#pseudo-class"
        }
      ],
      "begin": "(?<!\\-|\\()\\b(a|abbr|acronym|address|applet|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|embed|eventsource|fieldset|figure|figcaption|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|label|legend|li|link|map|mark|menu|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|samp|script|section|select|small|source|span|strike|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video|main|svg|rect|ruby|center|circle|ellipse|line|polyline|polygon|path|text|u|x)\\b(?!-|\\)|:\\s)|&",
      "name": "entity.name.tag.css.sugarss.symbol",
      "end": "(?=\\s|,|\\(|\\)|\\.|\\[|{|>|-|_)"
    },
    {
      "include": "#operator"
    },
    {
      "name": "support.type.property-name.css.sugarss",
      "match": "[a-z-]+((?=:|#{))"
    },
    {
      "include": "#reserved-words"
    },
    {
      "include": "#property-value"
    }
  ],
  "name": "SugarSS",
  "repository": {
    "reserved-words": {
      "name": "support.type.property-name.css.sugarss",
      "match": "\\b(false|from|in|not|null|through|to|true)\\b"
    },
    "double-quoted": {
      "patterns": [
        {
          "include": "#quoted-interpolation"
        }
      ],
      "begin": "\"",
      "name": "string.quoted.double.css.sugarss",
      "end": "\""
    },
    "operator": {
      "name": "keyword.operator.sugarss",
      "match": "\\+|\\s-\\s|\\s-(?=\\$)|(?<=\\()-(?=\\$)|\\s-(?=\\()|\\*|/|%|=|!|<|>|~"
    },
    "function-content": {
      "name": "string.quoted.double.css.sugarss",
      "match": "(?<=url\\(|format\\(|attr\\().+?(?=\\))"
    },
    "double-slash": {
      "patterns": [
        {
          "include": "#comment-tag"
        }
      ],
      "begin": "//",
      "name": "comment.line.sugarss",
      "end": "$"
    },
    "numeric": {
      "name": "constant.numeric.css.sugarss",
      "match": "(-|\\.)?[0-9]+(\\.[0-9]+)?"
    },
    "variable-root-css": {
      "name": "variable.parameter.sugarss",
      "match": "(?<!&)--[\\w-]+"
    },
    "function": {
      "name": "support.function.name.sugarss",
      "match": "(?<=[\\s|\\(|,|:])(?!url|format|attr)[\\w-][\\w-]*(?=\\()"
    },
    "rgb-value": {
      "name": "constant.other.color.rgb-value.css.sugarss",
      "match": "(#)([0-9a-fA-F]{3}|[0-9a-fA-F]{6})\\b"
    },
    "comment-tag": {
      "patterns": [
        {
          "name": "comment.tag.sugarss",
          "match": "[\\w-]+"
        }
      ],
      "begin": "{{",
      "name": "comment.tags.sugarss",
      "end": "}}"
    },
    "interpolation": {
      "patterns": [
        {
          "include": "#variable"
        },
        {
          "include": "#numeric"
        },
        {
          "include": "#operator"
        },
        {
          "include": "#unit"
        },
        {
          "include": "#double-quoted"
        },
        {
          "include": "#single-quoted"
        }
      ],
      "begin": "#{",
      "name": "support.function.interpolation.sugarss",
      "end": "}"
    },
    "unit": {
      "name": "keyword.other.unit.css.sugarss",
      "match": "(?<=[\\d]|})(ch|cm|deg|dpcm|dpi|dppx|em|ex|grad|Hz|in|kHz|mm|ms|pc|pt|px|rad|rem|s|turn|vh|vmax|vmin|vw|%)"
    },
    "function-content-var": {
      "name": "variable.parameter.sugarss",
      "match": "(?<=var\\()[\\w-]+(?=\\))"
    },
    "dotdotdot": {
      "name": "variable.other",
      "match": "\\.{3}"
    },
    "variable": {
      "name": "variable.parameter.sugarss",
      "match": "\\$[\\w-]+"
    },
    "single-quoted": {
      "patterns": [
        {
          "include": "#quoted-interpolation"
        }
      ],
      "begin": "'",
      "name": "string.quoted.single.css.sugarss",
      "end": "'"
    },
    "quoted-interpolation": {
      "patterns": [
        {
          "include": "#variable"
        },
        {
          "include": "#numeric"
        },
        {
          "include": "#operator"
        },
        {
          "include": "#unit"
        }
      ],
      "begin": "#{",
      "name": "support.function.interpolation.sugarss",
      "end": "}"
    },
    "pseudo-class": {
      "name": "entity.other.attribute-name.pseudo-class.css.sugarss",
      "match": ":[a-z:-]+"
    },
    "property-value": {
      "name": "meta.property-value.css.sugarss, support.constant.property-value.css.sugarss",
      "match": "[\\w-]+"
    },
    "semicolon": {
      "name": "invalid.illegal.bad-semicolon.css.sugarss",
      "match": ";"
    },
    "placeholder-selector": {
      "begin": "(?<!\\d)%(?!\\d)",
      "name": "entity.other.attribute-name.placeholder-selector.sugarss",
      "end": "$\\n?|\\s|(?={)"
    },
    "flag": {
      "name": "keyword.other.important.css.sugarss",
      "match": "!(important|default|optional|global)"
    },
    "parent-selector": {
      "name": "entity.name.tag.css.sugarss",
      "match": "&"
    }
  },
  "foldingStartMarker": "/\\*|^#|^\\*|^\\b|^\\.",
  "foldingStopMarker": "\\*/|^\\s*$",
  "fileTypes": [
    "sss"
  ],
  "uuid": "BDAE4719-925F-433C-905A-CAE367D924AC",
  "scopeName": "source.css.sugarss",
  "information_for_contributors": [
    "This file has been converted from https://github.com/vuejs/vetur/blob/master/",
    "If you want to provide a fix or improvement, please create a pull request against the original repository.",
    "Once accepted there, we are happy to receive an update request."
  ]
}