[
  {
    "type": "object",
    "title": "R",
    "properties": {
      "r.rpath.windows": {
        "type": "string",
        "default": "",
        "description": "Path to an R executable for Windows. Must be \"vanilla\" R, not radian etc.!",
        "scope": 3
      },
      "r.rpath.mac": {
        "type": "string",
        "default": "",
        "description": "Path to an R executable for macOS. Must be \"vanilla\" R, not radian etc.!",
        "scope": 3
      },
      "r.rpath.linux": {
        "type": "string",
        "default": "",
        "description": "Path to an R executable for Linux. Must be \"vanilla\" R, not radian etc.!",
        "scope": 3
      },
      "r.rterm.windows": {
        "type": "string",
        "default": "",
        "description": "R path for Windows. Can also be radian etc.",
        "scope": 3
      },
      "r.rterm.mac": {
        "type": "string",
        "default": "",
        "description": "R path for macOS. Can also be radian etc.",
        "scope": 3
      },
      "r.rterm.linux": {
        "type": "string",
        "default": "",
        "description": "R path for Linux. Can also be radian etc.",
        "scope": 3
      },
      "r.rterm.option": {
        "type": "array",
        "default": [
          "--no-save",
          "--no-restore"
        ],
        "description": "R command line options.",
        "items": {
          "type": "string"
        },
        "scope": 3
      },
      "r.libPaths": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "default": [],
        "markdownDescription": "Additional library paths to launch R background processes (R languageserver, help server, etc.). These paths will be appended to `.libPaths()` on process startup. It could be useful for projects with [renv](https://rstudio.github.io/renv/index.html) enabled.",
        "scope": 3
      },
      "r.lsp.enabled": {
        "type": "boolean",
        "default": true,
        "description": "Enable the R language service to provide code analysis features (completion, signature, hover, diagnostics, definition, etc.)",
        "scope": 3
      },
      "r.lsp.args": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "default": [],
        "description": "The command line arguments to use when launching R Language Server.",
        "scope": 3
      },
      "r.lsp.promptToInstall": {
        "type": "boolean",
        "default": true,
        "description": "Prompt to install R Language Server if it is not installed.",
        "scope": 3
      },
      "r.lsp.debug": {
        "type": "boolean",
        "default": false,
        "description": "Debug R Language Server.",
        "scope": 3
      },
      "r.lsp.diagnostics": {
        "type": "boolean",
        "default": false,
        "description": "Enable diagnostics.",
        "scope": 3
      },
      "r.lsp.lang": {
        "type": "string",
        "default": "",
        "markdownDescription": "Override default `LANG` environment variable.",
        "scope": 3
      },
      "r.lsp.use_stdio": {
        "type": "boolean",
        "default": false,
        "description": "Use STDIO connection instead of TCP. (Unix/macOS users only)",
        "scope": 3
      },
      "r.rmarkdown.codeLensCommands": {
        "type": "array",
        "items": {
          "type": "string",
          "enum": [
            "r.selectCurrentChunk",
            "r.runCurrentChunk",
            "r.runAboveChunks",
            "r.runCurrentAndBelowChunks",
            "r.runBelowChunks",
            "r.runAllChunks",
            "r.runPreviousChunk",
            "r.runNextChunk",
            "r.goToPreviousChunk",
            "r.goToNextChunk"
          ]
        },
        "default": [
          "r.runCurrentChunk",
          "r.runAboveChunks"
        ],
        "description": "Customize RMarkdown CodeLens, which are inline commands/buttons e.g. 'Run Chunk' shown on the first line of each code chunk. \nCustomize both the commands AND its orders (that is, CodeLens respect user-specified orders):",
        "scope": 3
      },
      "r.rmarkdown.enableCodeLens": {
        "type": "boolean",
        "default": true,
        "description": "Enable RMarkdown CodeLens, which are inline commands/buttons e.g. 'Run Chunk | Run Above' shown on the first line of each code chunk.\n\n- Click the buttons to run commands.\n- Hover on the buttons to show tooltips.\n- CodeLens commands are customizable via settings UI (Rmarkdown: Code Lens commands) or settings.json `r.rmarkdown.codeLensCommands`",
        "scope": 3
      },
      "r.rmarkdown.chunkBackgroundColor": {
        "type": "string",
        "default": "rgba(128, 128, 128, 0.1)",
        "description": "RMarkdown chunk background color in RGBA or RGB value. Defaults to rgba(128, 128, 128, 0.1). Leave it empty to disable it (use default editor background color). Reload VS Code after changing settings.\n\nLearn how to set colors: https://www.w3schools.com/css/css_colors_rgb.asp.\n\nExamples for syntax rgba(<red>, <green>, <blue>, <alpha>):\nrgba(128, 128, 128, 0.1)\nrgba(128, 128, 128, 0.3)\nrgba(255, 165, 0, 0.1)\n\n",
        "scope": 3
      },
      "r.rmarkdown.preview.autoRefresh": {
        "type": "boolean",
        "default": true,
        "markdownDescription": "Enable automatic refresh of R Markdown preview on file update.",
        "scope": 3
      },
      "r.rmarkdown.knit.useBackgroundProcess": {
        "type": "boolean",
        "default": true,
        "markdownDescription": "Should knitting occur in a background process (*smart knitting*), or should it be done in the current R terminal (*manual knitting*)? \n\n*Smart knitting* includes additional features, such as custom knit function detection, R Markdown site detection, progress bars, and the setting knit directory.",
        "scope": 3
      },
      "r.rmarkdown.knit.focusOutputChannel": {
        "type": "boolean",
        "default": true,
        "markdownDescription": "Should the R Markdown output channel be focused when knitting?\n\nRequires `#r.rmarkdown.knit.useBackgroundProcess#` to be set to `true`.",
        "scope": 3
      },
      "r.rmarkdown.knit.openOutputFile": {
        "type": "boolean",
        "default": false,
        "markdownDescription": "Should the output file be opened automatically when using knit?\n\nRequires `#r.rmarkdown.knit.useBackgroundProcess#` to be set to `true`.",
        "scope": 3
      },
      "r.rmarkdown.knit.command": {
        "type": "string",
        "default": "rmarkdown::render",
        "markdownDescription": "Command used to knit a Rmd file if not specified by the frontmatter.",
        "scope": 3
      },
      "r.rmarkdown.knit.defaults.knitWorkingDirectory": {
        "type": "string",
        "default": "document directory",
        "enum": [
          "document directory",
          "workspace root"
        ],
        "enumDescriptions": [
          "Use the document's directory as the knit directory",
          "Use the workspace root as the knit directory"
        ],
        "markdownDescription": "What working directory should R Markdown chunks be evaluated in? Default knit behaviour is to use the document's directory as root.\n\nRequires `#r.rmarkdown.knit.useBackgroundProcess#` to be set to `true`.",
        "additionalItems": false,
        "additionalProperties": false,
        "scope": 3
      },
      "r.helpPanel.enableSyntaxHighlighting": {
        "type": "boolean",
        "default": true,
        "description": "Enable syntax highlighting in the help panel.",
        "scope": 3
      },
      "r.helpPanel.cacheIndexFiles": {
        "type": "string",
        "enum": [
          "None",
          "Workspace",
          "Global"
        ],
        "description": "Whether/where to store parsed help indices between sessions.",
        "enumDescriptions": [
          "Do not store anything",
          "Store on a per workspace basis",
          "Store globally"
        ],
        "default": "None",
        "scope": 3
      },
      "r.helpPanel.rpath": {
        "type": "string",
        "default": "",
        "markdownDescription": "DEPRECATED! Path to an R executable. Must be \"vanilla\" R, not radian etc.! Will be read from registry or path if not set.",
        "markdownDeprecationMessage": "Will be deprecated. Use `#r.rpath.windows#`, `#r.rpath.mac#`, or `#r.rpath.linux#` instead.",
        "deprecationMessage": "Will be deprecated. Use r.rpath.windows, r.rpath.mac, or r.rpath.linux instead.",
        "scope": 3
      },
      "r.helpPanel.enableHoverLinks": {
        "type": "boolean",
        "default": true,
        "markdownDescription": "Show links to matching help pages in hover",
        "scope": 3
      },
      "r.helpPanel.clickCodeExamples": {
        "type": "object",
        "markdownDescription": "What happens when clicking code examples on help pages. Might require restarting to take effect.",
        "default": {
          "Click": "Copy",
          "Ctrl+Click": "Run",
          "Shift+Click": "Ignore"
        },
        "properties": {
          "Click": {
            "type": "string",
            "default": "Copy",
            "enum": [
              "Ignore",
              "Copy",
              "Run"
            ],
            "enumDescriptions": [
              "Do nothing",
              "Copy the code to the clipboard",
              "Run the code in the terminal"
            ]
          },
          "Ctrl+Click": {
            "type": "string",
            "default": "Run",
            "enum": [
              "Ignore",
              "Copy",
              "Run"
            ],
            "enumDescriptions": [
              "Do nothing",
              "Copy the code to the clipboard",
              "Run the code in the terminal"
            ]
          },
          "Shift+Click": {
            "type": "string",
            "default": "Ignore",
            "enum": [
              "Ignore",
              "Copy",
              "Run"
            ],
            "enumDescriptions": [
              "Do nothing",
              "Copy the code to the clipboard",
              "Run the code in the terminal"
            ]
          }
        },
        "additionalProperties": false,
        "scope": 3
      },
      "r.source.encoding": {
        "type": "string",
        "default": "UTF-8",
        "description": "An optional encoding to pass to R when executing the file, i.e. 'source(FILE, encoding=ENCODING)'.",
        "scope": 3
      },
      "r.source.focus": {
        "type": "string",
        "default": "editor",
        "enum": [
          "editor",
          "terminal",
          "none"
        ],
        "description": "What to show/focus after running code. Set to 'editor' or 'terminal' to show the terminal. Set to 'none' to not show the terminal.",
        "scope": 3
      },
      "r.alwaysUseActiveTerminal": {
        "type": "boolean",
        "default": false,
        "description": "Use active terminal for all commands, rather than creating a new R terminal.",
        "scope": 3
      },
      "r.bracketedPaste": {
        "type": "boolean",
        "default": false,
        "description": "Use bracketed paste mode when sending code to console. Enable for Radian console.",
        "scope": 3
      },
      "r.sessionWatcher": {
        "type": "boolean",
        "default": true,
        "description": "Enable R session watcher. Required for workspace viewer and most features to work with an R session. Restart required to take effect.",
        "scope": 3
      },
      "r.session.watchGlobalEnvironment": {
        "type": "boolean",
        "default": true,
        "markdownDescription": "Watch the global environment to provide hover, autocompletions, and workspace viewer information. Changes the option `vsc.globalenv` in R. Requires `#r.sessionWatcher#` to be set to `true`.",
        "scope": 3
      },
      "r.session.objectLengthLimit": {
        "type": "integer",
        "default": 2000,
        "markdownDescription": "The upper limit of object length to show object details in workspace viewer and provide session symbol completion. Decrease this value if you experience significant delay after executing R commands caused by large global objects with many elements. Changes the option `vsc.object_length_limit` in R. Requires `#r.sessionWatcher#` to be set to `true`.",
        "scope": 3
      },
      "r.session.objectTimeout": {
        "type": "integer",
        "default": 50,
        "markdownDescription": "The maximum number of milliseconds to get information of a single object in the global environment. Decrease this value if you experience significant delay after executing R commands caused by large global objects with many elements. Changes the option `vsc.object_timeout` in R. Requires `#r.sessionWatcher#` to be set to `true`.",
        "scope": 3
      },
      "r.session.levelOfObjectDetail": {
        "type": "string",
        "markdownDescription": "How much of the object to show on hover, autocompletion, and in the workspace viewer? Changes the option `vsc.str.max.level` in R. Requires `#r.sessionWatcher#` to be set to `true`.",
        "default": "Minimal",
        "enum": [
          "Minimal",
          "Normal",
          "Detailed"
        ],
        "enumDescriptions": [
          "Display literal values and object types only.",
          "Display the top level of list content, data frame column values, and example values.",
          "Display the top two levels of list content, data frame column values, and example values. This option may cause notable delay after each user input in the terminal."
        ],
        "scope": 3
      },
      "r.session.emulateRStudioAPI": {
        "type": "boolean",
        "default": true,
        "markdownDescription": "Emulate the RStudio API for addin support and other {rstudioapi} calls. Changes the option `vsc.rstudioapi` in R. Requires `#r.sessionWatcher#` to be set to `true`.",
        "scope": 3
      },
      "r.session.data.rowLimit": {
        "type": "integer",
        "default": 0,
        "markdownDescription": "The maximum number of rows to be displayed in the data viewer. `0` means no limit. Changes the option `vsc.row_limit` in R. Requires `#r.sessionWatcher#` to be set to `true`.",
        "scope": 3
      },
      "r.session.data.pageSize": {
        "type": "integer",
        "default": 500,
        "markdownDescription": "The maximum number of rows per page in the data viewer. `0` means to disable pagination.",
        "scope": 3
      },
      "r.session.viewers.viewColumn": {
        "type": "object",
        "markdownDescription": "Which view column should R-related webviews be displayed? Requires `#r.sessionWatcher#` to be set to `true`.",
        "default": {
          "plot": "Two",
          "browser": "Active",
          "viewer": "Two",
          "pageViewer": "Active",
          "view": "Two",
          "helpPanel": "Two"
        },
        "properties": {
          "plot": {
            "type": "string",
            "description": "Which view column to show the plot file on graphics update? \n\nChanges the option 'vsc.plot' in R.",
            "enum": [
              "Two",
              "Active",
              "Beside",
              "Disable"
            ],
            "enumDescriptions": [
              "Display plots in editor group 2.",
              "Display plots in the active editor.",
              "Display plots beside the active editor.",
              "Do not use the VSCode-R plot viewer."
            ],
            "default": "Two"
          },
          "browser": {
            "type": "string",
            "description": "Which view column to show the WebView triggered by browser (e.g. shiny apps)? \n\nChanges the option 'vsc.browser' in R.",
            "enum": [
              "Two",
              "Active",
              "Beside",
              "Disable"
            ],
            "enumDescriptions": [
              "Display browser in editor group 2.",
              "Display browser in the active editor.",
              "Display browser beside the active editor.",
              "Do not use the VSCode-R browser."
            ],
            "default": "Active"
          },
          "viewer": {
            "type": "string",
            "description": "Which view column to show the WebView triggered by viewer (e.g. htmlwidgets)? \n\nChanges the option 'vsc.viewer' in R.",
            "enum": [
              "Two",
              "Active",
              "Beside",
              "Disable"
            ],
            "enumDescriptions": [
              "Display viewer in editor group 2.",
              "Display viewer in the active editor.",
              "Display viewer beside the active editor.",
              "Do not use the VSCode-R viewer."
            ],
            "default": "Two"
          },
          "pageViewer": {
            "type": "string",
            "description": "Which view column to show the WebView triggered by the page viewer (e.g. profvis)? \n\nChanges the option 'vsc.page_viewer' in R.",
            "enum": [
              "Two",
              "Active",
              "Beside",
              "Disable"
            ],
            "enumDescriptions": [
              "Display page viewer in editor group 2.",
              "Display page viewer in the active editor.",
              "Display page viewer beside the active editor.",
              "Do not use the VSCode-R page viewer."
            ],
            "default": "Active"
          },
          "view": {
            "type": "string",
            "description": "Which view column to show the WebView triggered by View()? \n\nChanges the option 'vsc.plot' in R.",
            "enum": [
              "Two",
              "Active",
              "Beside",
              "Disable"
            ],
            "enumDescriptions": [
              "Display view output in editor group 2.",
              "Display view output in the active editor.",
              "Display view output beside the active editor.",
              "Do not use the VSCode-R view command."
            ],
            "default": "Two"
          },
          "helpPanel": {
            "type": "string",
            "description": "Which view column to show the WebView triggered by the help panel? \n\nChanges the option 'vsc.help_panel' in R.",
            "enum": [
              "Two",
              "Active",
              "Beside",
              "Disable"
            ],
            "enumDescriptions": [
              "Display help panel in editor group 2.",
              "Display help panel in the active editor.",
              "Display help panel beside the active editor.",
              "Do not use the VSCode-R help panel."
            ],
            "default": "Two"
          }
        },
        "additionalProperties": false,
        "scope": 3
      },
      "r.rtermSendDelay": {
        "type": "integer",
        "default": 8,
        "description": "Delay in milliseconds before sending each line to rterm (only applies if r.bracketedPaste is false)",
        "scope": 3
      },
      "r.workspaceViewer.showObjectSize": {
        "type": "boolean",
        "default": false,
        "markdownDescription": "Show object size when hovering over a workspace viewer item. Changes the option `vsc.show_object_size` in R.",
        "scope": 3
      },
      "r.workspaceViewer.removeHiddenItems": {
        "type": "boolean",
        "default": false,
        "description": "Remove hidden items when clearing workspace.",
        "scope": 3
      },
      "r.workspaceViewer.clearPrompt": {
        "type": "boolean",
        "default": true,
        "description": "Prompt the user for confirmation when clearing the workspace.",
        "scope": 3
      },
      "r.liveShare.timeout": {
        "type": "integer",
        "default": 10000,
        "description": "Time in milliseconds before aborting attempt to connect to Live Share API",
        "scope": 3
      },
      "r.liveShare.defaults.commandForward": {
        "type": "boolean",
        "default": false,
        "description": "Default boolean value for guest command forwarding.",
        "scope": 3
      },
      "r.liveShare.defaults.shareWorkspace": {
        "type": "boolean",
        "default": true,
        "description": "Default boolean value for sharing the R workspace with guests.",
        "scope": 3
      },
      "r.liveShare.defaults.shareBrowser": {
        "type": "boolean",
        "default": false,
        "description": "Default boolean value for automatically sharing R browser ports with guests.",
        "scope": 3
      },
      "r.plot.useHttpgd": {
        "type": "boolean",
        "default": false,
        "markdownDescription": "Use the httpgd-based plot viewer instead of the base VSCode-R plot viewer. Changes the option `vsc.use_httpgd` in R.\n\nRequires the `httpgd` R package version 1.2.0 or later.",
        "scope": 3
      },
      "r.plot.defaults.colorTheme": {
        "type": "string",
        "default": "original",
        "enum": [
          "vscode",
          "original"
        ],
        "markdownEnumDescriptions": [
          "Match background and primary stroke color to the current color theme (Or apply custom CSS overwrites, if specified in `#r.plot.customStyleOverwrites#`)",
          "Use original colors"
        ],
        "markdownDescription": "Which color theme to use when launching the plot viewer.",
        "scope": 3
      },
      "r.plot.defaults.plotPreviewLayout": {
        "type": "string",
        "default": "multirow",
        "enum": [
          "multirow",
          "scroll",
          "hidden"
        ],
        "enumDescriptions": [
          "Show in multiple rows",
          "Show scrollbar",
          "Don't show preview plots"
        ],
        "markdownDescription": "How to display plot previews if more than one row required.",
        "scope": 3
      },
      "r.plot.defaults.fullWindowMode": {
        "type": "boolean",
        "default": false,
        "markdownDescription": "Whether to use full window mode when launching the plot viewer.",
        "scope": 3
      },
      "r.plot.timing.resizeInterval": {
        "type": "number",
        "default": 100,
        "markdownDescription": "Interval in ms to wait between plot resizes.",
        "scope": 3
      },
      "r.plot.timing.refreshInterval": {
        "type": "number",
        "default": 10,
        "markdownDescription": "Interval in ms to wait between plot refreshs.",
        "scope": 3
      },
      "r.plot.customStyleOverwrites": {
        "type": "string",
        "default": "",
        "markdownDescription": "Path to a custom CSS file to be used when `#r.plot.defaults.colorTheme#` is `vscode`. Replaces the default CSS overwrites!",
        "scope": 3
      }
    }
  }
]